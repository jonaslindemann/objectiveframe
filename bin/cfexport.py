# -*- coding: iso-8859-15 -*-
'''
ObjectiveFrame generated CALFEM Python code.
'''

import numpy as np
import calfem.core as cfc


# ---- Materials

ep = np.array([
	[2.1e+09, 8.1e+08, 0.000301593, 8.70096e-08, 8.70096e-08, 1.74019e-07],
	[2.1e+09, 8.1e+08, 0.000458673, 3.05763e-07, 3.05763e-07, 6.11525e-07],
	[2.1e+09, 8.1e+08, 0.000615752, 7.39518e-07, 7.39518e-07, 1.47904e-06],
	[2.1e+09, 8.1e+08, 0.0027248, 1.41934e-06, 1.84559e-05, 6.05468e-08],
	[2.1e+09, 8.1e+08, 0.00171412, 4.49216e-07, 5.40363e-06, 2.78103e-08],
	[2.1e+09, 8.1e+08, 0.00099026, 1.58612e-07, 1.63323e-06, 1.04509e-08],
])

# ---- Elements

beam_topo = np.array([
	[23, 39, 1],
	[39, 55, 1],
	[55, 71, 1],
	[71, 87, 1],
	[87, 103, 1],
	[0, 15, 1],
	[15, 24, 1],
	[24, 40, 1],
	[40, 56, 1],
	[56, 72, 1],
	[72, 88, 1],
	[88, 104, 1],
	[1, 16, 1],
	[16, 25, 1],
	[25, 41, 1],
	[41, 57, 1],
	[57, 73, 1],
	[73, 89, 1],
	[89, 105, 1],
	[26, 42, 1],
	[42, 58, 1],
	[58, 74, 1],
	[74, 90, 1],
	[90, 106, 1],
	[3, 17, 1],
	[17, 27, 1],
	[27, 43, 1],
	[43, 59, 1],
	[59, 75, 1],
	[75, 91, 1],
	[91, 107, 1],
	[28, 44, 1],
	[44, 60, 1],
	[60, 76, 1],
	[76, 92, 1],
	[92, 108, 1],
	[29, 45, 1],
	[45, 61, 1],
	[61, 77, 1],
	[77, 93, 1],
	[93, 109, 1],
	[6, 18, 1],
	[18, 30, 1],
	[30, 46, 1],
	[46, 62, 1],
	[62, 78, 1],
	[78, 94, 1],
	[94, 110, 1],
	[7, 19, 1],
	[19, 31, 1],
	[31, 47, 1],
	[47, 63, 1],
	[63, 79, 1],
	[79, 95, 1],
	[95, 111, 1],
	[32, 48, 1],
	[48, 64, 1],
	[64, 80, 1],
	[80, 96, 1],
	[96, 112, 1],
	[33, 49, 1],
	[49, 65, 1],
	[65, 81, 1],
	[81, 97, 1],
	[97, 113, 1],
	[10, 20, 1],
	[20, 34, 1],
	[34, 50, 1],
	[50, 66, 1],
	[66, 82, 1],
	[82, 98, 1],
	[98, 114, 1],
	[35, 51, 1],
	[51, 67, 1],
	[67, 83, 1],
	[83, 99, 1],
	[99, 115, 1],
	[12, 21, 1],
	[21, 36, 1],
	[36, 52, 1],
	[52, 68, 1],
	[68, 84, 1],
	[84, 100, 1],
	[100, 116, 1],
	[13, 22, 1],
	[22, 37, 1],
	[37, 53, 1],
	[53, 69, 1],
	[69, 85, 1],
	[85, 101, 1],
	[101, 117, 1],
	[38, 54, 1],
	[54, 70, 1],
	[70, 86, 1],
	[86, 102, 1],
	[102, 118, 1],
	[17, 19, 1],
	[18, 20, 1],
	[23, 27, 1],
	[27, 31, 1],
	[31, 35, 1],
	[24, 28, 1],
	[28, 32, 1],
	[32, 36, 1],
	[25, 29, 1],
	[29, 33, 1],
	[33, 37, 1],
	[26, 30, 1],
	[30, 34, 1],
	[34, 38, 1],
	[39, 43, 1],
	[43, 47, 1],
	[47, 51, 1],
	[40, 44, 1],
	[44, 48, 1],
	[48, 52, 1],
	[41, 45, 1],
	[45, 49, 1],
	[49, 53, 1],
	[42, 46, 1],
	[46, 50, 1],
	[50, 54, 1],
	[55, 59, 1],
	[59, 63, 1],
	[63, 67, 1],
	[56, 60, 1],
	[60, 64, 1],
	[64, 68, 1],
	[57, 61, 1],
	[61, 65, 1],
	[65, 69, 1],
	[58, 62, 1],
	[62, 66, 1],
	[66, 70, 1],
	[71, 75, 1],
	[75, 79, 1],
	[79, 83, 1],
	[72, 76, 1],
	[76, 80, 1],
	[80, 84, 1],
	[73, 77, 1],
	[77, 81, 1],
	[81, 85, 1],
	[74, 78, 1],
	[78, 82, 1],
	[82, 86, 1],
	[87, 91, 1],
	[91, 95, 1],
	[95, 99, 1],
	[88, 92, 1],
	[92, 96, 1],
	[96, 100, 1],
	[89, 93, 1],
	[93, 97, 1],
	[97, 101, 1],
	[90, 94, 1],
	[94, 98, 1],
	[98, 102, 1],
	[103, 107, 1],
	[107, 111, 1],
	[111, 115, 1],
	[104, 108, 1],
	[108, 112, 1],
	[112, 116, 1],
	[105, 109, 1],
	[109, 113, 1],
	[113, 117, 1],
	[106, 110, 1],
	[110, 114, 1],
	[114, 118, 1],
	[15, 16, 1],
	[21, 22, 1],
	[23, 24, 1],
	[24, 25, 1],
	[25, 26, 1],
	[27, 28, 1],
	[28, 29, 1],
	[29, 30, 1],
	[31, 32, 1],
	[32, 33, 1],
	[33, 34, 1],
	[35, 36, 1],
	[36, 37, 1],
	[37, 38, 1],
	[39, 40, 1],
	[40, 41, 1],
	[41, 42, 1],
	[43, 44, 1],
	[44, 45, 1],
	[45, 46, 1],
	[47, 48, 1],
	[48, 49, 1],
	[49, 50, 1],
	[51, 52, 1],
	[52, 53, 1],
	[53, 54, 1],
	[55, 56, 1],
	[56, 57, 1],
	[57, 58, 1],
	[59, 60, 1],
	[60, 61, 1],
	[61, 62, 1],
	[63, 64, 1],
	[64, 65, 1],
	[65, 66, 1],
	[67, 68, 1],
	[68, 69, 1],
	[69, 70, 1],
	[71, 72, 1],
	[72, 73, 1],
	[73, 74, 1],
	[75, 76, 1],
	[76, 77, 1],
	[77, 78, 1],
	[79, 80, 1],
	[80, 81, 1],
	[81, 82, 1],
	[83, 84, 1],
	[84, 85, 1],
	[85, 86, 1],
	[87, 88, 1],
	[88, 89, 1],
	[89, 90, 1],
	[91, 92, 1],
	[92, 93, 1],
	[93, 94, 1],
	[95, 96, 1],
	[96, 97, 1],
	[97, 98, 1],
	[99, 100, 1],
	[100, 101, 1],
	[101, 102, 1],
	[103, 104, 1],
	[104, 105, 1],
	[105, 106, 1],
	[107, 108, 1],
	[108, 109, 1],
	[109, 110, 1],
	[111, 112, 1],
	[112, 113, 1],
	[113, 114, 1],
	[115, 116, 1],
	[116, 117, 1],
	[117, 118, 1],
	[40, 28, 1],
	[52, 32, 1],
	[47, 32, 1],
	[43, 28, 1],
	[46, 29, 1],
	[50, 33, 1],
	[53, 33, 1],
	[41, 29, 1],
	[40, 23, 1],
	[43, 23, 1],
	[41, 26, 1],
	[46, 26, 1],
	[50, 38, 1],
	[53, 38, 1],
	[72, 55, 1],
	[75, 55, 1],
	[73, 58, 1],
	[78, 58, 1],
	[85, 70, 1],
	[82, 70, 1],
	[79, 67, 1],
	[84, 67, 1],
	[47, 35, 1],
	[52, 35, 1],
	[111, 91, 1],
	[107, 95, 1],
	[95, 75, 1],
	[91, 79, 1],
	[79, 59, 1],
	[75, 63, 1],
	[63, 43, 1],
	[59, 47, 1],
	[47, 27, 1],
	[43, 31, 1],
	[31, 17, 1],
	[27, 19, 1],
	[19, 3, 1],
	[17, 7, 1],
	[117, 100, 1],
	[116, 101, 1],
	[101, 84, 1],
	[84, 69, 1],
	[100, 85, 1],
	[85, 68, 1],
	[68, 53, 1],
	[69, 52, 1],
	[52, 37, 1],
	[53, 36, 1],
	[36, 22, 1],
	[37, 21, 1],
	[22, 12, 1],
	[21, 13, 1],
	[110, 98, 1],
	[114, 94, 1],
	[94, 82, 1],
	[98, 78, 1],
	[78, 66, 1],
	[82, 62, 1],
	[62, 50, 1],
	[66, 46, 1],
	[46, 34, 1],
	[50, 30, 1],
	[30, 20, 1],
	[34, 18, 1],
	[18, 10, 1],
	[20, 6, 1],
	[105, 88, 1],
	[104, 89, 1],
	[89, 72, 1],
	[88, 73, 1],
	[73, 56, 1],
	[72, 57, 1],
	[57, 40, 1],
	[56, 41, 1],
	[41, 24, 1],
	[40, 25, 1],
	[25, 15, 1],
	[24, 16, 1],
	[16, 0, 1],
	[15, 1, 1],
	[103, 108, 1],
	[113, 118, 1],
	[108, 113, 1],
	[106, 109, 1],
	[109, 112, 1],
	[112, 115, 1],
])


# ----- Nodes

node_coords = np.array([
	[-3, 0, -3],
	[-1, 0, -3],
	[1, 0, -3],
	[3, 0, -3],
	[-3, 0, -1],
	[-1, 0, -1],
	[1, 0, -1],
	[3, 0, -1],
	[-3, 0, 1],
	[-1, 0, 1],
	[1, 0, 1],
	[3, 0, 1],
	[-3, 0, 3],
	[-1, 0, 3],
	[1, 0, 3],
	[3, 0, 3],
	[-1, 2, -3],
	[1, 2, -3],
	[-3, 2, -1],
	[3, 2, -1],
	[-3, 2, 1],
	[3, 2, 1],
	[-1, 2, 3],
	[1, 2, 3],
	[-3, 4, -3],
	[-1, 4, -3],
	[1, 4, -3],
	[3, 4, -3],
	[-3, 4, -1],
	[-1, 4, -1],
	[1, 4, -1],
	[3, 4, -1],
	[-3, 4, 1],
	[-1, 4, 1],
	[1, 4, 1],
	[3, 4, 1],
	[-3, 4, 3],
	[-1, 4, 3],
	[1, 4, 3],
	[3, 4, 3],
	[-3, 6, -3],
	[-1, 6, -3],
	[1, 6, -3],
	[3, 6, -3],
	[-3, 6, -1],
	[-1, 6, -1],
	[1, 6, -1],
	[3, 6, -1],
	[-3, 6, 1],
	[-1, 6, 1],
	[1, 6, 1],
	[3, 6, 1],
	[-3, 6, 3],
	[-1, 6, 3],
	[1, 6, 3],
	[3, 6, 3],
	[-3, 8, -3],
	[-1, 8, -3],
	[1, 8, -3],
	[3, 8, -3],
	[-3, 8, -1],
	[-1, 8, -1],
	[1, 8, -1],
	[3, 8, -1],
	[-3, 8, 1],
	[-1, 8, 1],
	[1, 8, 1],
	[3, 8, 1],
	[-3, 8, 3],
	[-1, 8, 3],
	[1, 8, 3],
	[3, 8, 3],
	[-3, 10, -3],
	[-1, 10, -3],
	[1, 10, -3],
	[3, 10, -3],
	[-3, 10, -1],
	[-1, 10, -1],
	[1, 10, -1],
	[3, 10, -1],
	[-3, 10, 1],
	[-1, 10, 1],
	[1, 10, 1],
	[3, 10, 1],
	[-3, 10, 3],
	[-1, 10, 3],
	[1, 10, 3],
	[3, 10, 3],
	[-3, 12, -3],
	[-1, 12, -3],
	[1, 12, -3],
	[3, 12, -3],
	[-3, 12, -1],
	[-1, 12, -1],
	[1, 12, -1],
	[3, 12, -1],
	[-3, 12, 1],
	[-1, 12, 1],
	[1, 12, 1],
	[3, 12, 1],
	[-3, 12, 3],
	[-1, 12, 3],
	[1, 12, 3],
	[3, 12, 3],
	[-3, 14, -3],
	[-1, 14, -3],
	[1, 14, -3],
	[3, 14, -3],
	[-3, 14, -1],
	[-1, 14, -1],
	[1, 14, -1],
	[3, 14, -1],
	[-3, 14, 1],
	[-1, 14, 1],
	[1, 14, 1],
	[3, 14, 1],
	[-3, 14, 3],
	[-1, 14, 3],
	[1, 14, 3],
	[3, 14, 3],
])

# ----- Local Z-axis

beam_orientation = np.array([
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[-6.12323e-17, 1.22465e-16, 1],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.47828e-16, 0.707107, -0.707107],
	[0, -1.11022e-16, -1],
	[0, -1.11022e-16, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.66533e-16, -5.55112e-17, -1],
	[-1.47828e-16, 0.707107, -0.707107],
	[0, -1.11022e-16, -1],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[0, -1.11022e-16, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[-1.47828e-16, 0.707107, -0.707107],
	[0, -1.11022e-16, -1],
	[-1.47828e-16, 0.707107, -0.707107],
	[0, -1.11022e-16, -1],
	[2.53633e-17, -0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.66533e-16, -5.55112e-17, -1],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.66533e-16, -5.55112e-17, -1],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.66533e-16, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
	[0, -1.11022e-16, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.47828e-16, 0.707107, -0.707107],
	[2.53633e-17, -0.707107, -0.707107],
	[-1.47828e-16, 0.707107, -0.707107],
	[-1.66533e-16, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
	[0.707107, -1.79345e-17, -0.707107],
	[0.707107, -1.79345e-17, -0.707107],
	[0.707107, -1.79345e-17, -0.707107],
	[-0.707107, 1.0453e-16, -0.707107],
	[-0.707107, 1.0453e-16, -0.707107],
	[-0.707107, 1.0453e-16, -0.707107],
])

# ----- Boundary conditions

node_bc = np.array([
	[1, 1, 1, 1, 1, 1],
])

node_bc_val = np.array([
	[0, 0, 0, 0, 0, 0],
])

node_bc_idx = np.array([
	[0, 0],
	[1, 0],
	[2, 0],
	[3, 0],
	[4, 0],
	[5, 0],
	[6, 0],
	[7, 0],
	[8, 0],
	[9, 0],
	[10, 0],
	[11, 0],
	[12, 0],
	[13, 0],
	[14, 0],
	[15, 0],
])

node_load = np.array([
	[0, -1000, 0],
])

node_load_idx = np.array([
	[107, 0],
])

