# -*- coding: iso-8859-15 -*-
'''
ObjectiveFrame generated CALFEM Python code.
'''

import numpy as np
import calfem.core as cfc


# ---- Materials

ep = np.array([
	[2.1e+09, 8.1e+07, 1, 1, 1, 1],
])

# ---- Elements

beam_topo = np.array([
	[0, 3, 0],
	[3, 4, 0],
	[4, 5, 0],
	[5, 1, 0],
	[0, 9, 0],
	[9, 8, 0],
	[8, 2, 0],
	[2, 7, 0],
	[7, 6, 0],
	[6, 1, 0],
	[10, 13, 0],
	[13, 14, 0],
	[14, 15, 0],
	[15, 11, 0],
	[10, 19, 0],
	[19, 18, 0],
	[18, 12, 0],
	[12, 17, 0],
	[17, 16, 0],
	[16, 11, 0],
	[20, 23, 0],
	[23, 24, 0],
	[24, 25, 0],
	[25, 21, 0],
	[20, 29, 0],
	[29, 28, 0],
	[28, 22, 0],
	[22, 27, 0],
	[27, 26, 0],
	[26, 21, 0],
	[30, 33, 0],
	[33, 34, 0],
	[34, 35, 0],
	[35, 31, 0],
	[30, 39, 0],
	[39, 38, 0],
	[38, 32, 0],
	[32, 37, 0],
	[37, 36, 0],
	[36, 31, 0],
	[40, 43, 0],
	[43, 44, 0],
	[44, 45, 0],
	[45, 41, 0],
	[40, 49, 0],
	[49, 48, 0],
	[48, 42, 0],
	[42, 47, 0],
	[47, 46, 0],
	[46, 41, 0],
	[50, 53, 0],
	[53, 54, 0],
	[54, 55, 0],
	[55, 51, 0],
	[50, 59, 0],
	[59, 58, 0],
	[58, 52, 0],
	[52, 57, 0],
	[57, 56, 0],
	[56, 51, 0],
	[60, 63, 0],
	[63, 64, 0],
	[64, 65, 0],
	[65, 61, 0],
	[60, 69, 0],
	[69, 68, 0],
	[68, 62, 0],
	[62, 67, 0],
	[67, 66, 0],
	[66, 61, 0],
	[70, 73, 0],
	[73, 74, 0],
	[74, 75, 0],
	[75, 71, 0],
	[70, 79, 0],
	[79, 78, 0],
	[78, 72, 0],
	[72, 77, 0],
	[77, 76, 0],
	[76, 71, 0],
	[80, 83, 0],
	[83, 84, 0],
	[84, 85, 0],
	[85, 81, 0],
	[80, 89, 0],
	[89, 88, 0],
	[88, 82, 0],
	[82, 87, 0],
	[87, 86, 0],
	[86, 81, 0],
	[80, 70, 0],
	[70, 60, 0],
	[60, 50, 0],
	[50, 40, 0],
	[40, 30, 0],
	[30, 20, 0],
	[20, 10, 0],
	[10, 0, 0],
	[1, 11, 0],
	[11, 21, 0],
	[21, 31, 0],
	[31, 41, 0],
	[41, 51, 0],
	[51, 61, 0],
	[61, 71, 0],
	[71, 81, 0],
	[2, 12, 0],
	[12, 22, 0],
	[22, 32, 0],
	[32, 42, 0],
	[42, 52, 0],
	[52, 62, 0],
	[62, 72, 0],
	[72, 82, 0],
	[19, 3, 0],
	[4, 18, 0],
	[4, 12, 0],
	[5, 17, 0],
])

bar_topo = np.array([
	[3, 9, 0],
	[3, 8, 0],
	[4, 8, 0],
	[4, 2, 0],
	[4, 7, 0],
	[5, 7, 0],
	[5, 6, 0],
	[13, 19, 0],
	[13, 18, 0],
	[14, 18, 0],
	[14, 12, 0],
	[14, 17, 0],
	[15, 17, 0],
	[15, 16, 0],
	[23, 29, 0],
	[23, 28, 0],
	[24, 28, 0],
	[24, 22, 0],
	[24, 27, 0],
	[25, 27, 0],
	[25, 26, 0],
	[33, 39, 0],
	[33, 38, 0],
	[34, 38, 0],
	[34, 32, 0],
	[34, 37, 0],
	[35, 37, 0],
	[35, 36, 0],
	[43, 49, 0],
	[43, 48, 0],
	[44, 48, 0],
	[44, 42, 0],
	[44, 47, 0],
	[45, 47, 0],
	[45, 46, 0],
	[53, 59, 0],
	[53, 58, 0],
	[54, 58, 0],
	[54, 52, 0],
	[54, 57, 0],
	[55, 57, 0],
	[55, 56, 0],
	[63, 69, 0],
	[63, 68, 0],
	[64, 68, 0],
	[64, 62, 0],
	[64, 67, 0],
	[65, 67, 0],
	[65, 66, 0],
	[73, 79, 0],
	[73, 78, 0],
	[74, 78, 0],
	[74, 72, 0],
	[74, 77, 0],
	[75, 77, 0],
	[75, 76, 0],
	[83, 89, 0],
	[83, 88, 0],
	[84, 88, 0],
	[84, 82, 0],
	[84, 87, 0],
	[85, 87, 0],
	[85, 86, 0],
	[94, 80, 0],
	[70, 95, 0],
	[60, 96, 0],
	[50, 97, 0],
	[40, 98, 0],
	[30, 99, 0],
	[20, 100, 0],
	[10, 101, 0],
	[0, 102, 0],
	[81, 90, 0],
	[85, 91, 0],
	[84, 92, 0],
	[83, 93, 0],
	[3, 103, 0],
	[4, 104, 0],
	[5, 105, 0],
	[1, 106, 0],
	[71, 113, 0],
	[61, 112, 0],
	[51, 111, 0],
	[41, 110, 0],
	[31, 109, 0],
	[21, 108, 0],
	[11, 107, 0],
	[7, 17, 0],
	[17, 27, 0],
	[27, 37, 0],
	[37, 47, 0],
	[47, 57, 0],
	[57, 67, 0],
	[67, 77, 0],
	[77, 87, 0],
	[6, 16, 0],
	[16, 26, 0],
	[26, 36, 0],
	[36, 46, 0],
	[46, 56, 0],
	[56, 66, 0],
	[66, 76, 0],
	[76, 86, 0],
	[88, 78, 0],
	[78, 68, 0],
	[68, 58, 0],
	[58, 48, 0],
	[48, 38, 0],
	[38, 28, 0],
	[28, 18, 0],
	[18, 8, 0],
	[89, 79, 0],
	[79, 69, 0],
	[69, 59, 0],
	[59, 49, 0],
	[49, 39, 0],
	[39, 29, 0],
	[29, 19, 0],
	[19, 9, 0],
	[1, 107, 0],
	[105, 1, 0],
	[0, 103, 0],
	[0, 101, 0],
	[80, 95, 0],
	[80, 93, 0],
	[81, 91, 0],
	[81, 113, 0],
	[0, 19, 0],
	[9, 18, 0],
	[8, 12, 0],
	[12, 7, 0],
	[17, 6, 0],
	[16, 1, 0],
	[81, 76, 0],
	[86, 77, 0],
	[87, 72, 0],
	[72, 88, 0],
	[78, 89, 0],
	[79, 80, 0],
	[84, 74, 0],
	[74, 64, 0],
	[64, 54, 0],
	[54, 44, 0],
	[44, 34, 0],
	[34, 24, 0],
	[24, 14, 0],
	[14, 4, 0],
	[5, 15, 0],
	[15, 25, 0],
	[25, 35, 0],
	[35, 45, 0],
	[45, 55, 0],
	[55, 65, 0],
	[65, 75, 0],
	[75, 85, 0],
	[83, 73, 0],
	[73, 63, 0],
	[63, 53, 0],
	[53, 43, 0],
	[43, 33, 0],
	[33, 23, 0],
	[23, 13, 0],
	[13, 3, 0],
	[71, 85, 0],
	[75, 84, 0],
	[84, 73, 0],
	[83, 70, 0],
	[11, 5, 0],
	[15, 4, 0],
	[10, 3, 0],
	[13, 4, 0],
])


# ----- Nodes

node_coords = np.array([
	[-3, 3, 4],
	[3, 3, 4],
	[0, 4.73205, 4],
	[-1.5, 3, 4],
	[0, 3, 4],
	[1.5, 3, 4],
	[2, 3.57735, 4],
	[1, 4.1547, 4],
	[-1, 4.1547, 4],
	[-2, 3.57735, 4],
	[-3, 3, 3],
	[3, 3, 3],
	[0, 4.73205, 3],
	[-1.5, 3, 3],
	[0, 3, 3],
	[1.5, 3, 3],
	[2, 3.57735, 3],
	[1, 4.1547, 3],
	[-1, 4.1547, 3],
	[-2, 3.57735, 3],
	[-3, 3, 2],
	[3, 3, 2],
	[0, 4.73205, 2],
	[-1.5, 3, 2],
	[0, 3, 2],
	[1.5, 3, 2],
	[2, 3.57735, 2],
	[1, 4.1547, 2],
	[-1, 4.1547, 2],
	[-2, 3.57735, 2],
	[-3, 3, 1],
	[3, 3, 1],
	[0, 4.73205, 1],
	[-1.5, 3, 1],
	[0, 3, 1],
	[1.5, 3, 1],
	[2, 3.57735, 1],
	[1, 4.1547, 1],
	[-1, 4.1547, 1],
	[-2, 3.57735, 1],
	[-3, 3, 0],
	[3, 3, 0],
	[0, 4.73205, 0],
	[-1.5, 3, 0],
	[0, 3, 0],
	[1.5, 3, 0],
	[2, 3.57735, 0],
	[1, 4.1547, 0],
	[-1, 4.1547, 0],
	[-2, 3.57735, 0],
	[-3, 3, -1],
	[3, 3, -1],
	[0, 4.73205, -1],
	[-1.5, 3, -1],
	[0, 3, -1],
	[1.5, 3, -1],
	[2, 3.57735, -1],
	[1, 4.1547, -1],
	[-1, 4.1547, -1],
	[-2, 3.57735, -1],
	[-3, 3, -2],
	[3, 3, -2],
	[0, 4.73205, -2],
	[-1.5, 3, -2],
	[0, 3, -2],
	[1.5, 3, -2],
	[2, 3.57735, -2],
	[1, 4.1547, -2],
	[-1, 4.1547, -2],
	[-2, 3.57735, -2],
	[-3, 3, -3],
	[3, 3, -3],
	[0, 4.73205, -3],
	[-1.5, 3, -3],
	[0, 3, -3],
	[1.5, 3, -3],
	[2, 3.57735, -3],
	[1, 4.1547, -3],
	[-1, 4.1547, -3],
	[-2, 3.57735, -3],
	[-3, 3, -4],
	[3, 3, -4],
	[0, 4.73205, -4],
	[-1.5, 3, -4],
	[0, 3, -4],
	[1.5, 3, -4],
	[2, 3.57735, -4],
	[1, 4.1547, -4],
	[-1, 4.1547, -4],
	[-2, 3.57735, -4],
	[3, 0, -4],
	[1.5, 0, -4],
	[0, 0, -4],
	[-1.5, 0, -4],
	[-3, 0, -4],
	[-3, 0, -3],
	[-3, 0, -2],
	[-3, 0, -1],
	[-3, 0, 0],
	[-3, 0, 1],
	[-3, 0, 2],
	[-3, 0, 3],
	[-3, 0, 4],
	[-1.5, 0, 4],
	[0, 0, 4],
	[1.5, 0, 4],
	[3, 0, 4],
	[3, 0, 3],
	[3, 0, 2],
	[3, 0, 1],
	[3, 0, 0],
	[3, 0, -1],
	[3, 0, -2],
	[3, 0, -3],
])

# ----- Local Z-axis

beam_orientation = np.array([
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.11022e-16, -5.55112e-17, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1.66533e-16, -1.94289e-16, -1],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[1, 0, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[-1, -1.22465e-16, 0],
	[0.520266, -0.600751, -0.606977],
	[0.358569, -0.414039, -0.83666],
	[6.12323e-17, -0.5, -0.866025],
	[0.247226, -0.570943, -0.782881],
])

# ----- Boundary conditions

node_bc = np.array([
	[1, 1, 1, 1, 1, 1],
	[1, 1, 1, 0, 0, 0],
])

node_bc_val = np.array([
	[0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0],
])

node_bc_idx = np.array([
	[91, 1],
	[92, 1],
	[93, 1],
	[94, 1],
	[95, 1],
	[96, 1],
	[97, 1],
	[98, 1],
	[99, 1],
	[100, 1],
	[101, 1],
	[102, 1],
	[103, 1],
	[104, 1],
	[105, 1],
	[106, 1],
	[107, 1],
	[108, 1],
	[109, 1],
	[110, 1],
	[111, 1],
	[112, 1],
	[113, 1],
	[114, 1],
])

node_load = np.array([
])

node_load_idx = np.array([
])

