# -*- coding: iso-8859-15 -*-
'''
ObjectiveFrame generated CALFEM Python code.
'''

import numpy as np
import calfem.core as cfc


# ---- Materials

ep = np.array([
	[2.1e+11, 8.1e+10, 0.00235, 1.27065e-06, 3.52394e-06, 8.14583e-08],
])

# ---- Elements

beam_topo = np.array([
	[0, 4, 0],
	[4, 5, 0],
	[5, 1, 0],
	[5, 7, 0],
	[7, 2, 0],
	[6, 3, 0],
	[6, 4, 0],
	[6, 7, 0],
	[4, 8, 0],
	[8, 10, 0],
	[10, 5, 0],
	[10, 11, 0],
	[11, 7, 0],
	[9, 11, 0],
	[9, 6, 0],
	[9, 8, 0],
	[2, 6, 0],
	[3, 7, 0],
	[6, 11, 0],
	[7, 9, 0],
	[6, 8, 0],
	[9, 4, 0],
	[3, 4, 0],
	[6, 0, 0],
	[0, 5, 0],
	[1, 4, 0],
	[5, 8, 0],
	[4, 10, 0],
	[5, 11, 0],
	[10, 7, 0],
	[1, 7, 0],
	[5, 2, 0],
])

bar_topo = np.array([
])


# ----- Nodes

node_coords = np.array([
	[-1, 0, -1],
	[-1, 0, 1],
	[1, 0, 1],
	[1, 0, -1],
	[-1, 2, -1],
	[-1, 2, 1],
	[1, 2, -1],
	[1, 2, 1],
	[-1, 4, -1],
	[1, 4, -1],
	[-1, 4, 1],
	[1, 4, 1],
])

# ----- Local Z-axis

beam_orientation = np.array([
	[-6.12323e-17, 1.22465e-16, 1],
	[1, 0, 0],
	[-6.12323e-17, 1.22465e-16, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[-6.12323e-17, 1.22465e-16, -1],
	[-6.12323e-17, 1.22465e-16, -1],
	[6.12323e-17, 6.12323e-17, -1],
	[1, 0, 0],
	[-6.12323e-17, 1.22465e-16, 1],
	[1, 0, 0],
	[-6.12323e-17, 1.22465e-16, -1],
	[6.12323e-17, -6.12323e-17, -1],
	[-6.12323e-17, 1.22465e-16, -1],
	[1, 0, 0],
	[-6.12323e-17, 1.22465e-16, -1],
	[6.12323e-17, 6.12323e-17, 1],
	[6.12323e-17, -0.707107, -0.707107],
	[6.12323e-17, 0.707107, -0.707107],
	[6.12323e-17, 0.707107, -0.707107],
	[6.12323e-17, -0.707107, -0.707107],
	[5.55112e-17, 5.55112e-17, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[5.55112e-17, 5.55112e-17, -1],
	[-1.66533e-16, -5.55112e-17, -1],
	[6.12323e-17, 0.707107, -0.707107],
	[6.12323e-17, -0.707107, -0.707107],
	[6.12323e-17, -0.707107, -0.707107],
	[6.12323e-17, 0.707107, -0.707107],
	[5.55112e-17, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
	[5.55112e-17, -5.55112e-17, -1],
	[0, -1.11022e-16, -1],
])

# ----- Boundary conditions

node_bc = np.array([
	[1, 1, 1, 0, 0, 0],
	[1, 1, 1, 1, 1, 1],
	[1, 1, 1, 1, 1, 1],
])

node_bc_val = np.array([
	[0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0],
])

node_bc_idx = np.array([
	[1, 0],
	[2, 0],
	[3, 0],
	[4, 0],
])

node_load = np.array([
	[0, 0, 1000],
	[-0, -1000, -0],
	[-1000, -0, -0],
])

node_load_idx = np.array([
	[8, 2],
	[10, 0],
	[11, 1],
])

