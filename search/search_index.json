{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the ObjectiveFrame web site ObjectiveFrame is a finite element beam analysis application developed at Structural Mechanics at Lund university. The application focused on how to make finite element analysis real-time explorable with direct feedback methods. On this page you will find information on installing, using and developing ObjectiveFrame.","title":"Home"},{"location":"#welcome-to-the-objectiveframe-web-site","text":"ObjectiveFrame is a finite element beam analysis application developed at Structural Mechanics at Lund university. The application focused on how to make finite element analysis real-time explorable with direct feedback methods. On this page you will find information on installing, using and developing ObjectiveFrame.","title":"Welcome to the ObjectiveFrame web site"},{"location":"about/","text":"About ObjectiveFrame The application was orginially developed at Structural Mechanics by Jonas Lindemann for his PhD thesis work. See: Objective Frame - An educational tool for understanding the behavior of structures Techniques for distributed access and visualisation computational mechanics ObjectiveFrame has also been used to develop distributed techniques for finite element applications using the CORBA framework. CORBA in distributed Finite element applications The application has also been used as an experimental application for user interface techniques within the field of finite element analysis. Daniel \u00c5kesson implemented 3d gesture controls using a leap-controller for interacting with finite element models. Using 3D gesture controls for interacting with mechanical models Pierre Olsson developed routines and user interfaces for computing section properties. Implementation details. The application is implemented as a C++ application using OpenGL for hardware accelerated rendering. ObjectiveFrame uses a scene graph model implemented using the C++ library Interactive Visualisation Framework - Ivf++ . The solver is implemented using the matrix-library Newmat11 . This version of the application has been given a large overhaul both with regards to C++ and the user interface. To increase the interactive aspect of the application the user interface has been reimplemented using the ImGui - library . This is an immediate mode user interface library that provides a state-less user interface rendered directly in the OpenGL window. Future development The ImGui implementation still builds on the FLTK library as it has been a large effort to unbind the close ties to this library. The next iterations will base the implementation directly on the GLFW library. User interface improvements. There is a still a lot of non-standard ways of interacting with the application, but these are also some things that will be worked out in upcoming versions. Interactions with the CALFEM for Python library. I would like to see the application as a pre-processor for generating CALFEM code that can be used by students in Structural Mechanics. An improved solver - Currently the newmat-based solver works OK, but lacks scalability as it is not very actively maintained. The eigen-library would be a candidate to replace newmat. Jonas Lindemann","title":"About"},{"location":"about/#about-objectiveframe","text":"The application was orginially developed at Structural Mechanics by Jonas Lindemann for his PhD thesis work. See: Objective Frame - An educational tool for understanding the behavior of structures Techniques for distributed access and visualisation computational mechanics ObjectiveFrame has also been used to develop distributed techniques for finite element applications using the CORBA framework. CORBA in distributed Finite element applications The application has also been used as an experimental application for user interface techniques within the field of finite element analysis. Daniel \u00c5kesson implemented 3d gesture controls using a leap-controller for interacting with finite element models. Using 3D gesture controls for interacting with mechanical models Pierre Olsson developed routines and user interfaces for computing section properties.","title":"About ObjectiveFrame"},{"location":"about/#implementation-details","text":"The application is implemented as a C++ application using OpenGL for hardware accelerated rendering. ObjectiveFrame uses a scene graph model implemented using the C++ library Interactive Visualisation Framework - Ivf++ . The solver is implemented using the matrix-library Newmat11 . This version of the application has been given a large overhaul both with regards to C++ and the user interface. To increase the interactive aspect of the application the user interface has been reimplemented using the ImGui - library . This is an immediate mode user interface library that provides a state-less user interface rendered directly in the OpenGL window.","title":"Implementation details."},{"location":"about/#future-development","text":"The ImGui implementation still builds on the FLTK library as it has been a large effort to unbind the close ties to this library. The next iterations will base the implementation directly on the GLFW library. User interface improvements. There is a still a lot of non-standard ways of interacting with the application, but these are also some things that will be worked out in upcoming versions. Interactions with the CALFEM for Python library. I would like to see the application as a pre-processor for generating CALFEM code that can be used by students in Structural Mechanics. An improved solver - Currently the newmat-based solver works OK, but lacks scalability as it is not very actively maintained. The eigen-library would be a candidate to replace newmat. Jonas Lindemann","title":"Future development"},{"location":"develop/","text":"Develop and extend ObjectiveFrame ObjectiveFrame is a C++ application built upon several libraries. To build the application required libraries have to be built. The main library used is Ivf++. This is a object oriented 3D scene graph libary encapsulating the OpenGL library. The second library required is FLTK, which is a multiplatform user interface library available for Windows, Linux and macOS. Future versions of ObjectiveFrame will use ImGui on top of GLFW instead. The following sections describe how to build the libraries and the application on Windows. Linux and macOS will come later. Building Ivf++ Building FLTK Building ObjectiveFrame","title":"Develop"},{"location":"develop/#develop-and-extend-objectiveframe","text":"ObjectiveFrame is a C++ application built upon several libraries. To build the application required libraries have to be built. The main library used is Ivf++. This is a object oriented 3D scene graph libary encapsulating the OpenGL library. The second library required is FLTK, which is a multiplatform user interface library available for Windows, Linux and macOS. Future versions of ObjectiveFrame will use ImGui on top of GLFW instead. The following sections describe how to build the libraries and the application on Windows. Linux and macOS will come later.","title":"Develop and extend ObjectiveFrame"},{"location":"develop/#building-ivf","text":"","title":"Building Ivf++"},{"location":"develop/#building-fltk","text":"","title":"Building FLTK"},{"location":"develop/#building-objectiveframe","text":"","title":"Building ObjectiveFrame"},{"location":"download/","text":"Downloading ObjectiveFrame All releases of ObjectiveFrame can be downloaded from Github here: https://github.com/jonaslindemann/objectiveframe/releases As this is a beta version we need to know what issues and enhancements to fix in upcoming releases. Please report any bugs or feature enhancements using the issue tracker in github here: https://github.com/jonaslindemann/objectiveframe/issues","title":"Download"},{"location":"download/#downloading-objectiveframe","text":"All releases of ObjectiveFrame can be downloaded from Github here: https://github.com/jonaslindemann/objectiveframe/releases As this is a beta version we need to know what issues and enhancements to fix in upcoming releases. Please report any bugs or feature enhancements using the issue tracker in github here: https://github.com/jonaslindemann/objectiveframe/issues","title":"Downloading ObjectiveFrame"},{"location":"links/","text":"Links related to ObjectiveFrame","title":"Links"},{"location":"links/#links-related-to-objectiveframe","text":"","title":"Links related to ObjectiveFrame"},{"location":"use/","text":"Using ObjectiveFrame","title":"Use"},{"location":"use/#using-objectiveframe","text":"","title":"Using ObjectiveFrame"}]}