# data file for the Fltk User Interface Designer (fluid)
version 1.0400
header_name {.h}
code_name {.cpp}
decl {\#ifdef WIN32} {private local
}

decl {\#include <windows.h>} {private local
}

decl {\#include "resource.h"} {selected private global
}

decl {\#endif} {private local
}

Function {cb_wndMain(Fl_Widget* widget, void* p)} {open private
} {
  code {MainFrame* mainFrame = (MainFrame*)p;
mainFrame->close();} {}
}

class MainFrame {open
} {
  decl {int m_argc} {private local
  }
  decl {char** m_argv} {private local
  }
  Function {MainFrame()} {open
  } {
    Fl_Window wndMain {
      label ObjectiveFrame open
      xywh {757 267 746 583} type Double resizable visible
    } {
      Fl_Box ivfWorkspace {
        xywh {0 0 746 583} color 0 resizable
        code0 {\#include "FemWidget.h"}
        class FemWidget
      }
    }
    code {wndMain->callback(cb_wndMain, this);} {}
  }
  Function {show()} {open
  } {
    code {\#ifdef WIN32
extern HINSTANCE fl_display;
wndMain->icon((char *)LoadIcon(fl_display, MAKEINTRESOURCE(IDI_ICON1)));
\#endif
wndMain->size(Fl::w()-40, Fl::h()-40);
wndMain->position(20,40);
wndMain->show();
ivfWorkspace->show();} {}
  }
  Function {updateToggles()} {} {
    code {} {}
  }
  Function {close()} {} {
    code {ivfWorkspace->hideAllDialogs();
wndMain->hide();} {}
  }
  Function {setArguments(int argc, char** argv)} {} {
    code {m_argc = argc;
m_argv = argv;
ivfWorkspace->setArguments(m_argc, m_argv);} {}
  }
  Function {~MainFrame()} {open
  } {
    code {} {}
  }
  Function {setProgramPath(const std::string& path)} {open
  } {
    code {ivfWorkspace->setProgramPath(path);} {}
  }
  Function {show_fullscreen(int x, int y, int width, int height)} {open
  } {
    code {\#ifdef WIN32
//extern HINSTANCE fl_display;
//wndMain->icon((char *)LoadIcon(fl_display, MAKEINTRESOURCE(IDI_OBJFRAME)));
\#endif
wndMain->show();
wndMain->resize(x,y,width,height);
wndMain->border(0);
ivfWorkspace->show();} {}
  }
}
