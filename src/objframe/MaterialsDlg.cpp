// generated by Fast Light User Interface Designer (fluid) version 1.0400

#include "MaterialsDlg.h"
#include "IvfFemWidget.h"
#include "MaterialDlg.h"
#include <string>

void CMaterialsDlg::cb_lbMaterials_i(Fl_Browser*, void*) {
  if (m_materials!=NULL)
{
	if (lbMaterials->value()>0)
	{
		m_currentMaterial = (CFemBeamMaterial*)
			m_materials->getMaterial(lbMaterials->value()-1);
	}
	else m_currentMaterial = NULL;
	if (m_femWidget!=NULL)
	{
		CIvfFemWidget* femWidget = (CIvfFemWidget*) m_femWidget;
		femWidget->setCurrentMaterial(m_currentMaterial);
	}
};
}
void CMaterialsDlg::cb_lbMaterials(Fl_Browser* o, void* v) {
  ((CMaterialsDlg*)(o->parent()->user_data()))->cb_lbMaterials_i(o,v);
}

void CMaterialsDlg::cb_btnAddMaterial_i(Fl_HoverButton*, void*) {
  if (m_materials!=NULL)
{
	char materialName[255];
	const char* result = fl_input("Beam property name");
	if (result!=NULL)
	{
		strcpy(materialName, result);
		if (materialName!=NULL)
		{
			CFemBeamMaterial* material = new CFemBeamMaterial();
			material->setName(materialName);
			m_materials->addMaterial(material);
			this->fillListBox();
		}
	}
};
}
void CMaterialsDlg::cb_btnAddMaterial(Fl_HoverButton* o, void* v) {
  ((CMaterialsDlg*)(o->parent()->user_data()))->cb_btnAddMaterial_i(o,v);
}

#include <FL/Fl_Pixmap.H>
static const char *idata_tlAddMaterial[] = {
"    18    18       16            1",
"` c #000000",
". c #800000",
"# c #008000",
"a c None",
"b c #000080",
"c c #800080",
"d c #008080",
"e c #c0c0c0",
"f c #808080",
"g c #ff0000",
"h c #00ff00",
"i c #ffff00",
"j c #0000ff",
"k c #ff00ff",
"l c #00ffff",
"m c #ffffff",
"aaaaaaaaaaaaaaaaaa",
"aaaaaaaaaaaaabbaaa",
"aaaaaaaaaaaaabbaaa",
"aaaaaaaaaaabbbbbba",
"aaaammmmmmmbbbbbba",
"aaammmmmmmmmfbbaaa",
"aammmmmmmmmffbbaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeeffaaaaa",
"aameeeeeeeffaaaaaa",
"aafffffffffaaaaaaa",
"aaaaaaaaaaaaaaaaaa",
"aaaaaaaaaaaaaaaaaa"
};
static Fl_Image *image_tlAddMaterial() {
  static Fl_Image *image = new Fl_Pixmap(idata_tlAddMaterial);
  return image;
}

void CMaterialsDlg::cb_btnRemoveMaterial_i(Fl_HoverButton*, void*) {
  if (m_currentMaterial!=NULL)
{
	if (m_materials->removeMaterial(m_currentMaterial))
		this->fillListBox();
	else
		fl_message("Material is used and can not be removed. Remove material references from elements.");
};
}
void CMaterialsDlg::cb_btnRemoveMaterial(Fl_HoverButton* o, void* v) {
  ((CMaterialsDlg*)(o->parent()->user_data()))->cb_btnRemoveMaterial_i(o,v);
}

static const char *idata_tlDeleteMaterial[] = {
"    18    18       16            1",
"` c #000000",
". c #800000",
"# c #008000",
"a c None",
"b c #000080",
"c c #800080",
"d c #008080",
"e c #c0c0c0",
"f c #808080",
"g c #ff0000",
"h c #00ff00",
"i c #ffff00",
"j c #0000ff",
"k c #ff00ff",
"l c #00ffff",
"m c #ffffff",
"aaaaaaaaaaaaaaaaaa",
"aaaaaaaaaaaaaaaaaa",
"aaaaaaaaaaaaaaaaaa",
"aaaaaaaaaaabbbbbba",
"aaaammmmmmmbbbbbba",
"aaammmmmmmmmffaaaa",
"aammmmmmmmmfffaaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeeffaaaaa",
"aameeeeeeeffaaaaaa",
"aafffffffffaaaaaaa",
"aaaaaaaaaaaaaaaaaa",
"aaaaaaaaaaaaaaaaaa"
};
static Fl_Image *image_tlDeleteMaterial() {
  static Fl_Image *image = new Fl_Pixmap(idata_tlDeleteMaterial);
  return image;
}

void CMaterialsDlg::cb_btnEditMaterial_i(Fl_HoverButton*, void*) {
  if (this->getCurrentMaterial()!=NULL)
{
	CMaterialDlg* dlg = new CMaterialDlg();
	dlg->setMaterial(this->getCurrentMaterial());
	dlg->setWorkspace((Fl_Widget*)m_femWidget);
	dlg->show();
	if (dlg->getModalResult()==MR_OK)
	{
		//ivfWorkspace->setWorkspace(dlg->getWorkspaceSize());
	}
	delete dlg;
	this->fillListBox();
	if (m_femWidget!=NULL)
	{
		CIvfFemWidget* femWidget = (CIvfFemWidget*) m_femWidget;
		femWidget->setNeedRecalc(true);
	}
};
}
void CMaterialsDlg::cb_btnEditMaterial(Fl_HoverButton* o, void* v) {
  ((CMaterialsDlg*)(o->parent()->user_data()))->cb_btnEditMaterial_i(o,v);
}

static const char *idata_tlInspMaterial[] = {
"    18    18       16            1",
"` c #000000",
". c #800000",
"# c #008000",
"a c None",
"b c #000080",
"c c #800080",
"d c #008080",
"e c #c0c0c0",
"f c #808080",
"g c #ff0000",
"h c #00ff00",
"i c #ffff00",
"j c #0000ff",
"k c #ff00ff",
"l c #00ffff",
"m c #ffffff",
"aaaaaaaaaaaaaaaaaa",
"aaaaaaaa``````abba",
"aaaaaaa`mmmmmm`bba",
"aaaaaa`m`mmmmmmbba",
"aaaam`m`m`mmmmmbba",
"aaam`m`m`m`mmm`bba",
"aam`m`f`m`m```abba",
"aamf`fef`m`fffaaba",
"aamefeeef`ffffaaaa",
"aameeeeeefefffaaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeefffaaaa",
"aameeeeeeeeffaaaaa",
"aameeeeeeeffaaaaaa",
"aafffffffffaaaaaaa",
"aaaaaaaaaaaaaaaaaa",
"aaaaaaaaaaaaaaaaaa"
};
static Fl_Image *image_tlInspMaterial() {
  static Fl_Image *image = new Fl_Pixmap(idata_tlInspMaterial);
  return image;
}

void CMaterialsDlg::cb_btnAssignMaterial_i(Fl_HoverButton*, void*) {
  if (this->getCurrentMaterial()!=NULL)
{
	if (m_femWidget!=NULL)
	{
		CIvfFemWidget* femWidget = (CIvfFemWidget*)m_femWidget;
		femWidget->assignMaterialToSelected();
		femWidget->setNeedRecalc(true);
		this->fillListBox();
	}
};
}
void CMaterialsDlg::cb_btnAssignMaterial(Fl_HoverButton* o, void* v) {
  ((CMaterialsDlg*)(o->parent()->user_data()))->cb_btnAssignMaterial_i(o,v);
}

static const char *idata_tlAssignMaterial[] = {
"    18    18        6            1",
"` c #000081",
". c #810000",
"# c none",
"a c #818181",
"b c #c2c2c2",
"c c #ffffff",
"##################",
"###.###########.##",
"##...#.......#...#",
"###.###########.##",
"#########`########",
"#####ccc```ccca###",
"####ccc`````caa###",
"###cccccc`ccaaa###",
"###cbbbbb`bbaaa###",
"###cbbbbb`bbaaa###",
"###cbbbbb`bbaaa###",
"###cbbbbbbbbaaa###",
"###cbbbbbbbbaaa###",
"###cbbbbbbbbaaa###",
"###cbbbbbbbbaa####",
"###cbbbbbbbaa#####",
"###aaaaaaaaa######",
"##################"
};
static Fl_Image *image_tlAssignMaterial() {
  static Fl_Image *image = new Fl_Pixmap(idata_tlAssignMaterial);
  return image;
}

void CMaterialsDlg::cb_btnClearMaterial_i(Fl_HoverButton*, void*) {
  if (m_femWidget!=NULL)
{
	CIvfFemWidget* femWidget = (CIvfFemWidget*) m_femWidget;
	femWidget->removeMaterialFromSelected();
	femWidget->setNeedRecalc(true);
	this->fillListBox();
};
}
void CMaterialsDlg::cb_btnClearMaterial(Fl_HoverButton* o, void* v) {
  ((CMaterialsDlg*)(o->parent()->user_data()))->cb_btnClearMaterial_i(o,v);
}

static const char *idata_tlClearMaterial[] = {
"    18    18        6            1",
"` c #000081",
". c #810000",
"# c none",
"a c #818181",
"b c #c2c2c2",
"c c #ffffff",
"#######`###`######",
"###.####`#`####.##",
"##...#...`...#...#",
"###.####`#`####.##",
"#######`###`######",
"#####ccccccccca###",
"####cccccccccaa###",
"###cccccccccaaa###",
"###cbbbbbbbbaaa###",
"###cbbbbbbbbaaa###",
"###cbbbbbbbbaaa###",
"###cbbbbbbbbaaa###",
"###cbbbbbbbbaaa###",
"###cbbbbbbbbaaa###",
"###cbbbbbbbbaa####",
"###cbbbbbbbaa#####",
"###aaaaaaaaa######",
"##################"
};
static Fl_Image *image_tlClearMaterial() {
  static Fl_Image *image = new Fl_Pixmap(idata_tlClearMaterial);
  return image;
}

CMaterialsDlg::CMaterialsDlg() {
  { wndMaterials = new Fl_Double_Window(184, 211, "Beam properties");
    wndMaterials->user_data((void*)(this));
    { lbMaterials = new Fl_Browser(4, 20, 144, 187, "Properties");
      lbMaterials->type(2);
      lbMaterials->box(FL_DOWN_BOX);
      lbMaterials->labelsize(12);
      lbMaterials->textsize(12);
      lbMaterials->callback((Fl_Callback*)cb_lbMaterials);
      lbMaterials->align(Fl_Align(FL_ALIGN_TOP_LEFT));
    } // Fl_Browser* lbMaterials
    { btnAddMaterial = new Fl_HoverButton(152, 20, 28, 28);
      btnAddMaterial->box(FL_THIN_UP_BOX);
      btnAddMaterial->down_box(FL_THIN_DOWN_BOX);
      btnAddMaterial->color(FL_BACKGROUND_COLOR);
      btnAddMaterial->selection_color(FL_BACKGROUND_COLOR);
      btnAddMaterial->image( image_tlAddMaterial() );
      btnAddMaterial->labeltype(FL_NORMAL_LABEL);
      btnAddMaterial->labelfont(0);
      btnAddMaterial->labelsize(14);
      btnAddMaterial->labelcolor(FL_FOREGROUND_COLOR);
      btnAddMaterial->callback((Fl_Callback*)cb_btnAddMaterial);
      btnAddMaterial->align(Fl_Align(FL_ALIGN_CENTER));
      btnAddMaterial->when(FL_WHEN_RELEASE);
    } // Fl_HoverButton* btnAddMaterial
    { btnRemoveMaterial = new Fl_HoverButton(152, 52, 28, 28);
      btnRemoveMaterial->box(FL_THIN_UP_BOX);
      btnRemoveMaterial->down_box(FL_THIN_DOWN_BOX);
      btnRemoveMaterial->color(FL_BACKGROUND_COLOR);
      btnRemoveMaterial->selection_color(FL_BACKGROUND_COLOR);
      btnRemoveMaterial->image( image_tlDeleteMaterial() );
      btnRemoveMaterial->labeltype(FL_NORMAL_LABEL);
      btnRemoveMaterial->labelfont(0);
      btnRemoveMaterial->labelsize(14);
      btnRemoveMaterial->labelcolor(FL_FOREGROUND_COLOR);
      btnRemoveMaterial->callback((Fl_Callback*)cb_btnRemoveMaterial);
      btnRemoveMaterial->align(Fl_Align(FL_ALIGN_CENTER));
      btnRemoveMaterial->when(FL_WHEN_RELEASE);
    } // Fl_HoverButton* btnRemoveMaterial
    { btnEditMaterial = new Fl_HoverButton(152, 148, 28, 28);
      btnEditMaterial->box(FL_THIN_UP_BOX);
      btnEditMaterial->down_box(FL_THIN_DOWN_BOX);
      btnEditMaterial->color(FL_BACKGROUND_COLOR);
      btnEditMaterial->selection_color(FL_BACKGROUND_COLOR);
      btnEditMaterial->image( image_tlInspMaterial() );
      btnEditMaterial->labeltype(FL_NORMAL_LABEL);
      btnEditMaterial->labelfont(0);
      btnEditMaterial->labelsize(14);
      btnEditMaterial->labelcolor(FL_FOREGROUND_COLOR);
      btnEditMaterial->callback((Fl_Callback*)cb_btnEditMaterial);
      btnEditMaterial->align(Fl_Align(FL_ALIGN_CENTER));
      btnEditMaterial->when(FL_WHEN_RELEASE);
    } // Fl_HoverButton* btnEditMaterial
    { btnAssignMaterial = new Fl_HoverButton(152, 84, 28, 28);
      btnAssignMaterial->box(FL_THIN_UP_BOX);
      btnAssignMaterial->down_box(FL_THIN_DOWN_BOX);
      btnAssignMaterial->color(FL_BACKGROUND_COLOR);
      btnAssignMaterial->selection_color(FL_BACKGROUND_COLOR);
      btnAssignMaterial->image( image_tlAssignMaterial() );
      btnAssignMaterial->labeltype(FL_NORMAL_LABEL);
      btnAssignMaterial->labelfont(0);
      btnAssignMaterial->labelsize(14);
      btnAssignMaterial->labelcolor(FL_FOREGROUND_COLOR);
      btnAssignMaterial->callback((Fl_Callback*)cb_btnAssignMaterial);
      btnAssignMaterial->align(Fl_Align(FL_ALIGN_CENTER));
      btnAssignMaterial->when(FL_WHEN_RELEASE);
    } // Fl_HoverButton* btnAssignMaterial
    { btnClearMaterial = new Fl_HoverButton(152, 116, 28, 28);
      btnClearMaterial->box(FL_THIN_UP_BOX);
      btnClearMaterial->down_box(FL_THIN_DOWN_BOX);
      btnClearMaterial->color(FL_BACKGROUND_COLOR);
      btnClearMaterial->selection_color(FL_BACKGROUND_COLOR);
      btnClearMaterial->image( image_tlClearMaterial() );
      btnClearMaterial->labeltype(FL_NORMAL_LABEL);
      btnClearMaterial->labelfont(0);
      btnClearMaterial->labelsize(14);
      btnClearMaterial->labelcolor(FL_FOREGROUND_COLOR);
      btnClearMaterial->callback((Fl_Callback*)cb_btnClearMaterial);
      btnClearMaterial->align(Fl_Align(FL_ALIGN_CENTER));
      btnClearMaterial->when(FL_WHEN_RELEASE);
    } // Fl_HoverButton* btnClearMaterial
    wndMaterials->set_non_modal();
    wndMaterials->end();
  } // Fl_Double_Window* wndMaterials
  m_femWidget = NULL;
  m_materials = NULL;
  m_currentMaterial = NULL;
}

void CMaterialsDlg::show() {
  wndMaterials->show();
  this->setMaterials(m_materials);
  this->fillListBox();
}

void CMaterialsDlg::setMaterials(CFemBeamMaterialSet* materials) {
  m_materials = materials;
  if (m_materials==NULL)
  {
  	lbMaterials->clear();
  	lbMaterials->deactivate();
  	btnAddMaterial->deactivate();
  	btnRemoveMaterial->deactivate();
  	btnEditMaterial->deactivate();
  }
  else
  {
  	lbMaterials->activate();
  	btnAddMaterial->activate();
  	btnRemoveMaterial->activate();
  	btnEditMaterial->activate();
  	this->fillListBox();
  	m_currentMaterial = NULL;
  	wndMaterials->redraw();
  }
}

CFemBeamMaterialSet* CMaterialsDlg::getMaterials() {
  return m_materials;
}

void CMaterialsDlg::hide() {
  wndMaterials->hide();
}

void CMaterialsDlg::fillListBox() {
  if (m_materials!=NULL)
  {
  	std::string materialName;
  	lbMaterials->clear();
  	for (int i=0; i<m_materials->getSize(); i++)
  	{
  		CFemBeamMaterial* material = 
  			(CFemBeamMaterial*)m_materials->getMaterial(i);
  		materialName = material->getName()+" ("+to_string<int>(material->getRefCount()-2)+")";
  		lbMaterials->add(materialName.c_str(), material);
  	}
  }
  m_currentMaterial = NULL;
}

CFemBeamMaterial* CMaterialsDlg::getCurrentMaterial() {
  return m_currentMaterial;
}

void CMaterialsDlg::setFemWidget(void* femWidget) {
  m_femWidget = femWidget;
}
