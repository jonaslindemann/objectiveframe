# data file for the Fltk User Interface Designer (fluid)
version 1.0400
header_name {.h}
code_name {.cpp}
decl {\#define MR_OK 0} {public local
}

decl {\#define MR_CANCEL 1} {public local
}

decl {\#include <FemBeamNodeBC.h>} {public local
}

decl {\#include <FL/fl_show_colormap.H>} {private local
}

class NodeBCDlg {open
} {
  decl {CFemBeamNodeBC* m_bc} {private local
  }
  decl {Fl_Widget* m_workspace} {private local
  }
  decl {int m_modalResult} {private local
  }
  decl {Fl_Color m_colorIndex} {private local
  }
  Function {NodeBCDlg()} {open
  } {
    Fl_Window wndNodeBC {
      label {Node BC} open
      xywh {816 205 257 250} type Double color 32 modal visible
    } {
      Fl_Button btnApply {
        label Ok
        callback {if (m_bc!=NULL)
{
	if (btnXdispl->value()==1)
		m_bc->prescribe(1,edtXdispl->value());
	else
		m_bc->unprescribe(1);

	if (btnYdispl->value()==1)
		m_bc->prescribe(2,edtYdispl->value());
	else
		m_bc->unprescribe(2);

	if (btnZdispl->value()==1)
		m_bc->prescribe(3,edtZdispl->value());
	else
		m_bc->unprescribe(3);

	if (btnXrot->value()==1)
		m_bc->prescribe(4,edtXrot->value());
	else
		m_bc->unprescribe(4);

	if (btnYrot->value()==1)
		m_bc->prescribe(5,edtYrot->value());
	else
		m_bc->unprescribe(5);

	if (btnZrot->value()==1)
		m_bc->prescribe(6,edtZrot->value());
	else
		m_bc->unprescribe(6);

	if (m_workspace!=NULL)
	{
		m_workspace->set_changed();
		m_workspace->redraw();
	}
	uchar r, g, b;
	Fl::get_color(boxColor->color(), r, g, b);
	m_bc->setColor((int) boxColor->color());
	m_bc->setName((char*)edtName->value());
}
m_modalResult = MR_OK;
wndNodeBC->hide();}
        xywh {119 223 67 23} box THIN_UP_BOX down_box THIN_DOWN_BOX color 43 labelsize 12
      }
      Fl_Button btnClose {
        label Cancel
        callback {m_modalResult = MR_CANCEL;
wndNodeBC->hide();} selected
        xywh {191 223 61 23} box THIN_UP_BOX down_box THIN_DOWN_BOX color 43 labelsize 12
      }
      Fl_Tabs tbElementBC {open
        xywh {4 4 248 212} box FLAT_BOX color 45 selection_color 45 labelsize 12
      } {
        Fl_Group grpGeneral {
          label General
          xywh {13 28 239 188} color 45 selection_color 42 labelsize 12
        } {
          Fl_Input edtName {
            label Name
            xywh {13 46 230 24} box FLAT_BOX color 42 labelsize 12 align 5 textsize 12
          }
          Fl_Box boxColor {
            label Color
            xywh {13 74 196 24} box FLAT_BOX color 93 labelsize 12
          }
          Fl_Button btnSetColor {
            label {...}
            callback {if (m_bc!=NULL)
{
	m_colorIndex = boxColor->color();
	m_colorIndex = fl_show_colormap(m_colorIndex);
	boxColor->color(m_colorIndex);
	wndNodeBC->redraw();
}}
            xywh {215 74 28 24} box THIN_UP_BOX down_box PLASTIC_DOWN_BOX labelsize 12
          }
        }
        Fl_Group grpData {
          label Data
          xywh {16 28 236 188} color 45 selection_color 34 labelsize 12 hide
        } {
          Fl_Light_Button btnXdispl {
            label {x-displ.}
            callback {if (btnXdispl->value()==1)
	edtXdispl->activate();
else
	edtXdispl->deactivate();}
            xywh {43 40 72 24} box THIN_UP_BOX down_box THIN_DOWN_BOX color 43 labelsize 12
          }
          Fl_Light_Button btnYdispl {
            label {y-displ.}
            callback {if (btnYdispl->value()==1)
	edtYdispl->activate();
else
	edtYdispl->deactivate();}
            xywh {43 68 72 24} box THIN_UP_BOX down_box THIN_DOWN_BOX color 43 labelsize 12
          }
          Fl_Light_Button btnZdispl {
            label {z-displ}
            callback {if (btnZdispl->value()==1)
	edtZdispl->activate();
else
	edtZdispl->deactivate();}
            xywh {43 96 72 24} box THIN_UP_BOX down_box THIN_DOWN_BOX color 43 labelsize 12
          }
          Fl_Light_Button btnXrot {
            label {x-rot.}
            callback {if (btnXrot->value()==1)
	edtXrot->activate();
else
	edtXrot->deactivate();}
            xywh {43 124 72 24} box THIN_UP_BOX down_box THIN_DOWN_BOX color 43 labelsize 12
          }
          Fl_Light_Button btnYrot {
            label {y-rot.}
            callback {if (btnYrot->value()==1)
	edtYrot->activate();
else
	edtYrot->deactivate();}
            xywh {43 152 72 24} box THIN_UP_BOX down_box THIN_DOWN_BOX color 43 labelsize 12
          }
          Fl_Light_Button btnZrot {
            label {z-rot.}
            callback {if (btnZrot->value()==1)
	edtZrot->activate();
else
	edtZrot->deactivate();}
            xywh {43 180 72 24} box THIN_UP_BOX down_box THIN_DOWN_BOX color 43 labelsize 12
          }
          Fl_Value_Input edtZdispl {
            xywh {140 96 76 24} box FLAT_BOX color 42 labelsize 12 textsize 12
          }
          Fl_Value_Input edtYdispl {
            xywh {140 68 76 24} box FLAT_BOX color 42 labelsize 12 textsize 12
          }
          Fl_Value_Input edtXdispl {
            xywh {140 40 76 24} box FLAT_BOX color 42 labelsize 12 textsize 12
          }
          Fl_Value_Input edtXrot {
            xywh {140 124 76 24} box FLAT_BOX color 42 labelsize 12 textsize 12
          }
          Fl_Value_Input edtYrot {
            xywh {140 152 76 24} box FLAT_BOX color 42 labelsize 12 textsize 12
          }
          Fl_Value_Input edtZrot {
            xywh {140 180 76 24} box FLAT_BOX color 42 labelsize 12 textsize 12
          }
        }
      }
    }
    code {m_bc = NULL;} {}
  }
  Function {show()} {open
  } {
    code {this->setBC(m_bc);
wndNodeBC->show();
while (wndNodeBC->visible()) Fl::wait();} {}
  }
  Function {setBC(CFemBeamNodeBC* bc)} {open
  } {
    code {m_bc = bc;
if (m_bc==NULL)
{
	btnApply->deactivate();
	tbElementBC->deactivate();
}
else
{
	std::string bcName;
	double value;
	double ex, ey, ez;
	bcName = m_bc->getName();
	btnApply->activate();
	tbElementBC->activate();
	edtName->value(bcName.c_str());
	boxColor->color((Fl_Color) m_bc->getColor());

	if (m_bc->isPrescribed(1))
	{
		btnXdispl->value(1);
		edtXdispl->activate();
	}
	else
	{
		btnXdispl->value(0);
		edtXdispl->deactivate();
	}

	if (m_bc->isPrescribed(2))
	{
		btnYdispl->value(1);
		edtYdispl->activate();
	}
	else
	{
		btnYdispl->value(0);
		edtYdispl->deactivate();
	}

	if (m_bc->isPrescribed(3))
	{
		btnZdispl->value(1);
		edtZdispl->activate();
	}
	else
	{
		btnZdispl->value(0);
		edtZdispl->deactivate();
	}

	if (m_bc->isPrescribed(4))
	{
		btnXrot->value(1);
		edtXrot->activate();
	}
	else
	{
		btnXrot->value(0);
		edtXrot->deactivate();
	}

	if (m_bc->isPrescribed(5))
	{
		btnYrot->value(1);
		edtYrot->activate();
	}
	else
	{
		btnYrot->value(0);
		edtYrot->deactivate();
	}

	if (m_bc->isPrescribed(6))
	{
		btnZrot->value(1);
		edtZrot->activate();
	}
	else
	{
		btnZrot->value(0);
		edtZrot->deactivate();
	}

	edtXdispl->value(m_bc->getPrescribedValue(1));
	edtYdispl->value(m_bc->getPrescribedValue(2));
	edtZdispl->value(m_bc->getPrescribedValue(3));
	edtXrot->value(m_bc->getPrescribedValue(4));
	edtYrot->value(m_bc->getPrescribedValue(5));
	edtZrot->value(m_bc->getPrescribedValue(6));

}} {}
  }
  Function {getBC()} {return_type {CFemBeamNodeBC*}
  } {
    code {return m_bc;} {}
  }
  Function {setWorkspace(Fl_Widget* widget)} {} {
    code {m_workspace = widget;} {}
  }
  Function {hide()} {} {
    code {wndNodeBC->hide();} {}
  }
  Function {getModalResult()} {return_type int
  } {
    code {return m_modalResult;} {}
  }
}
