// generated by Fast Light User Interface Designer (fluid) version 1.0400

#ifndef MaterialDlg_h
#define MaterialDlg_h
#include <FL/Fl.H>
#define MR_OK 0
#define MR_CANCEL 1
#define MR_APPLY 2
#include <FemBeamMaterial.h>
void cb_update(void* p);
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Tabs.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Box.H>

class MaterialDlg {
  int m_sectionType;
  int m_modalResult;
  CFemBeamMaterial* m_material;
  Fl_Widget* m_workspace;
  Fl_Color m_colorIndex;
public:
  MaterialDlg();
  Fl_Double_Window *wndMaterial;
  Fl_Button *btnOK;
private:
  inline void cb_btnOK_i(Fl_Button*, void*);
  static void cb_btnOK(Fl_Button*, void*);
public:
  Fl_Button *btnClose;
private:
  inline void cb_btnClose_i(Fl_Button*, void*);
  static void cb_btnClose(Fl_Button*, void*);
public:
  Fl_Button *btnApply;
private:
  inline void cb_btnApply_i(Fl_Button*, void*);
  static void cb_btnApply(Fl_Button*, void*);
public:
  Fl_Tabs *tbMaterial;
  Fl_Group *grpGeneral;
  Fl_Group *grpMaterialConst;
  Fl_Value_Input *edtE;
  Fl_Value_Input *edtG;
  Fl_Group *grpSectionConst;
  Fl_Value_Input *edtA;
  Fl_Value_Input *edtIy;
  Fl_Value_Input *edtIz;
  Fl_Value_Input *edtKv;
  Fl_Group *grpVisual;
  Fl_Input *edtName;
  Fl_Box *boxColor;
  Fl_Button *btnSetColor;
private:
  inline void cb_btnSetColor_i(Fl_Button*, void*);
  static void cb_btnSetColor(Fl_Button*, void*);
public:
  Fl_Group *grpSection;
  Fl_Group *grpRepresentation;
  Fl_Button *btnRectangle;
private:
  inline void cb_btnRectangle_i(Fl_Button*, void*);
  static void cb_btnRectangle(Fl_Button*, void*);
public:
  Fl_Button *btnISection;
private:
  inline void cb_btnISection_i(Fl_Button*, void*);
  static void cb_btnISection(Fl_Button*, void*);
public:
  Fl_Button *btnTSection;
private:
  inline void cb_btnTSection_i(Fl_Button*, void*);
  static void cb_btnTSection(Fl_Button*, void*);
public:
  Fl_Value_Input *edtHeight;
private:
  inline void cb_edtHeight_i(Fl_Value_Input*, void*);
  static void cb_edtHeight(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *edtWidth;
private:
  inline void cb_edtWidth_i(Fl_Value_Input*, void*);
  static void cb_edtWidth(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *edtUFT;
private:
  inline void cb_edtUFT_i(Fl_Value_Input*, void*);
  static void cb_edtUFT(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *edtLFT;
private:
  inline void cb_edtLFT_i(Fl_Value_Input*, void*);
  static void cb_edtLFT(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *edtUFW;
private:
  inline void cb_edtUFW_i(Fl_Value_Input*, void*);
  static void cb_edtUFW(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *edtLFW;
private:
  inline void cb_edtLFW_i(Fl_Value_Input*, void*);
  static void cb_edtLFW(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *edtWT;
private:
  inline void cb_edtWT_i(Fl_Value_Input*, void*);
  static void cb_edtWT(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *edtULFW;
private:
  inline void cb_edtULFW_i(Fl_Value_Input*, void*);
  static void cb_edtULFW(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *edtLLFW;
private:
  inline void cb_edtLLFW_i(Fl_Value_Input*, void*);
  static void cb_edtLLFW(Fl_Value_Input*, void*);
public:
  Fl_Button *btnUSection;
private:
  inline void cb_btnUSection_i(Fl_Button*, void*);
  static void cb_btnUSection(Fl_Button*, void*);
public:
  Fl_Button *btnRHS;
private:
  inline void cb_btnRHS_i(Fl_Button*, void*);
  static void cb_btnRHS(Fl_Button*, void*);
public:
  Fl_Value_Input *edtOuterRadius;
private:
  inline void cb_edtOuterRadius_i(Fl_Value_Input*, void*);
  static void cb_edtOuterRadius(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *edtInnerRadius;
private:
  inline void cb_edtInnerRadius_i(Fl_Value_Input*, void*);
  static void cb_edtInnerRadius(Fl_Value_Input*, void*);
public:
  Fl_Button *btnSolidPipe;
private:
  inline void cb_btnSolidPipe_i(Fl_Button*, void*);
  static void cb_btnSolidPipe(Fl_Button*, void*);
public:
  Fl_Button *btnPipe;
private:
  inline void cb_btnPipe_i(Fl_Button*, void*);
  static void cb_btnPipe(Fl_Button*, void*);
public:
  void show();
  void setMaterial(CFemBeamMaterial* material);
  CFemBeamMaterial* getMaterial();
  void setWorkspace(Fl_Widget* widget);
  void hide();
  int getModalResult();
  void setSectionProps(double width, double height, double UFW, double LFW,
									   double WT, double UFT, double LFT, double ULFW,
									   double LLFW, double outerRadius, double innerRadius, int repr);
  void getSectionProps(double &width, double &height, double &UFW, double &LFW,
									   double &WT, double &UFT, double &LFT, double &ULFW,
									   double &LLFW, double &outerRadius, double &innerRadius);
  void callBack(int repr);
  void update();
  void updateData();
};
#endif
